<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>

        <!-- configuration -->
        <service id="ost_shipping_costs.configuration" class="OstFoundation\Services\ConfigurationService">
            <factory service="ost_foundation.services.configuration_service" method="getConfig"/>
            <argument type="string">OstShippingCosts</argument>
        </service>

        <!-- commands -->
        <service id="ost_shipping_costs.commands.sync_self_delivery_zip_command" class="OstShippingCosts\Commands\SyncSelfDeliveryZipCommand">
            <tag name="console.command" command="ost-shipping-costs:sync-self-delivery-zip"/>
            <argument type="service" id="db"/>
            <argument type="service" id="ost_erp_api.api"/>
        </service>

        <!-- services -->
        <service id="ost_shipping_costs.article_service" class="OstShippingCosts\Services\ArticleService">
            <argument type="service" id="ost_shipping_costs.configuration" />
        </service>

        <service id="ost_shipping_costs.basket_service" class="OstShippingCosts\Services\BasketService">
            <argument type="service" id="ost_shipping_costs.configuration" />
        </service>

        <service id="ost_shipping_costs.dispatch_filter_service" class="OstShippingCosts\Services\DispatchFilterService">
            <argument type="service" id="ost_shipping_costs.configuration" />
        </service>

        <service id="ost_shipping_costs.calculator_service" class="OstShippingCosts\Services\CalculatorService">
            <argument type="service" id="ost_shipping_costs.configuration" />
        </service>

        <!-- events and hooks -->
        <service id="ost_shipping_costs.listeners.core.s_admin.shipping_costs" class="OstShippingCosts\Listeners\Core\sAdmin">
            <argument type="service" id="ost_shipping_costs.configuration" />
            <tag name="shopware.event_listener" method="afterShippingCosts" event="sAdmin::sGetPremiumShippingcosts::after" />
        </service>

        <service id="ost_shipping_costs.listeners.core.s_admin.dispatches" class="OstShippingCosts\Listeners\Core\sAdmin">
            <argument type="service" id="ost_shipping_costs.configuration" />
            <tag name="shopware.event_listener" method="afterDispatches" event="sAdmin::sGetPremiumDispatches::after" />
        </service>

    </services>
</container>